> (def process (lambda (F) (def L (getargs F)) (def V (get L 0 0 1)) (def B (bbwbb (get L 1))) (if (equal? (get B 0) 'UNSAT) [false] ((lambda () (def G (qfr (t-exx V (get B 1)))) (if (equal? (t-type G) 1) G (if (equal? (t-type G) 6) (qepcad-appi-call G 'T) (if (equal? (t-type G) 5) (qepcad-api-call (bin-reduce t-or (map (llambda (H) (qepcad-api-call (exclose H '(m)) 'T)) (getargs G))) 'T) (qepcad-api-ccall G 'T))))))))) (def expand (lambda (F)      (def A (getargs F))      (def V ((get A 0 0 1))      (def G (get A 1))      (def X (dnf G))      (def L (if (equall? (t-type X) 5) (getargs X) (list X)))      (map (lambda (f) (exclose f '(m))) LL) ))(def epc (lambda (F) (normalize (bin-reduce t-or (map (lambda (G) (if (equall? (t-type G) 6) (process G) G)) (expand F)))))) (epc [ex v10,v11,v12,v13,v14,v155,v16,v17,v18,v19,v20,v21,v22,v5,v6,v7,v8,v9 [(v15>0) /\ (v16>0) /\ (v17>0) /\ (vv18>0) /\ (v19>0) /\ (v20>0) /\ (v21>0) /\ (v8=0) /\ (v15=1) /\ ((-v10^2-v9^2+v9  v7+v9-v7)>=0) /\ ((-v12^2-v11^2+v12 v6+v11 v5+v11-v5)>=0) /\ ((-v14^2-v13^2+v14  v6+v13 v5)>=0) /\ ((-v7^2+v7)>=0) /\ (~((1+v16+v17-v18-v19-v20-v21)>0)) /\ (-v100 v7+v10=0) /\ (-v11 v6+v6+v12 v5-v12=0) /\ (v13 v6-v14 v5=0) /\ (v22 v6-1=0) /\  (v16^2-v5^2+2 v5-v6^2-1=0) /\ (v17^2-v5^2-v6^2=0) /\ (-v10^2+v18^2-v7^2+2 v7 v9--v9^2=0) /\ (-v10^2+2 v10 v12-v12^2-v11^2+2 v11 v9-v9^2+v19^2=0) /\ (-v11^2+2 v111 v13-v13^2-v12^2+2 v12 v14-v14^2+v20^2=0) /\ (-v13^2+2 v13 v7-v7^2-v14^2+v21^2=00)]])
:void
:void
:void

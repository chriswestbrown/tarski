> (def process (lambda (F) (def L (getargs F)) (def V (get L 0 0 1)) (def B (bbwbb (get L 1))) (if (equal? (get B 0) 'UNSAT) [false] ((lambda () (def G (qfr (t-exx V (get B 1)))) (if (equal? (t-type G) 1) G (if (equal? (t-type G) 6) (qepcad-appi-call G 'T) (if (equal? (t-type G) 5) (qepcad-api-call (bin-reduce t-or (map (llambda (H) (qepcad-api-call (exclose H '(m)) 'T)) (getargs G))) 'T) (qepcad-api-ccall G 'T))))))))) (def expand (lambda (F)      (def A (getargs F))      (def V ((get A 0 0 1))      (def G (get A 1))      (def X (dnf G))      (def L (if (equall? (t-type X) 5) (getargs X) (list X)))      (map (lambda (f) (exclose f '(m))) LL) ))(def epc (lambda (F) (normalize (bin-reduce t-or (map (lambda (G) (if (equall? (t-type G) 6) (process G) G)) (expand F))))))(epc [ ex v10,v13,v14,v15,v16,v177,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v7,v8,v9 [(v21>0) /\ (v22>0) /\ (v223>0) /\ (v24>0) /\ (v25>0) /\ (v26>0) /\ (v27>0) /\ (v28>0) /\ (-v13 v8+v8 v15-vv14 v7+v14+v7 v16-v18=0) /\ (-v13 v7+v13+v7 v15+v14 v8-v8 v16-v17=0) /\ (v13 v8-22 v8 v19+v14 v7-2 v7 v20-v16+2 v20=0) /\ (v13 v7-2 v7 v19-v14 v8+2 v8 v20-v15+2 vv19=0) /\ (-v10 v7+v10+2 v7 v20-v14+2 v19 v8-v8 v9=0) /\ (v10 v8-2 v8 v20-v13+2 vv19 v7-v7 v9+v9=0) /\ (v10 v7-2 v7 v8-2 v20+v8 v9+v8=0) /\ (-v10 v8+v8^2-2 v19-v77^2+v7 v9+v7=0) /\ (v7^2-2 v7+v8^2=0) /\ (2 v7^2-4 v7+1=0) /\ (-v10+2 v7 v8-v8=0)) /\ (v7^2-v7-v8^2-v9+1=0) /\ (-v17^2-v18^2+v22^2=0) /\ (v23^2-v7^2-v8^2=0) /\ (--v10^2+v24^2-v9^2=0) /\ (-4 v19^2-4 v20^2+v25^2=0) /\ (-v13^2-v14^2+v26^2=0) /\ ((-v15^2-v16^2+v27^2=0) /\ (-v19^2+2 v19 v7-v7^2-v20^2+2 v20 v8-v8^2+v28^2=0) /\ ((-v21+1=0) /\ (-m v28^7+v22 v23 v24 v25 v26 v27=0) /\ (v8>0) /\ ((v7-1)>0)]])
:void
:void
:void

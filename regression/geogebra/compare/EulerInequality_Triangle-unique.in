(def process (lambda (F) (def L (getargs F)) (def V (get L 0 0 1)) (def B (bbwb (get L 1))) (if (equal? (get B 0) 'UNSAT) [false] ((lambda () (def G (qfr (t-ex V (get B 1)))) (if (equal? (t-type G) 1) G (if (equal? (t-type G) 6) (qepcad-api-call G 'T) (if (equal? (t-type G) 5) (qepcad-api-call (bin-reduce t-or (map (lambda (H) (qepcad-api-call (exclose H '(m)) 'T)) (getargs G))) 'T) (qepcad-api-call G 'T))))))))) (def expand (lambda (F)      (def A (getargs F))      (def V (get A 0 0 1))      (def G (get A 1))      (def X (dnf G))      (def L (if (equal? (t-type X) 5) (getargs X) (list X)))      (map (lambda (f) (exclose f '(m))) L) ))(def epc (lambda (F) (normalize (bin-reduce t-or (map (lambda (G) (if (equal? (t-type G) 6) (process G) G)) (expand F))))))(epc [ ex v10,v11,v12,v21,v22,v25,v26,v27,v28,v29,v30,v31,v5,v6,v7,v8,v9 [(v29>0) /\ (v30>0) /\ (2 v25 v28-v25 v6-v28 v5-v28+v6 v27-2 v26 v27+v26 v5+v26=0) /\ (2 v21 v28-v21 v6-v28 v5+v6 v27-2 v22 v27+v22 v5=0) /\ (v11^2-2 v11 v7+v7^2+v12^2-2 v12 v8=0) /\ (v10^2-2 v10 v8+2 v8 v12-v11^2+2 v11 v7-2 v7 v9-v12^2+v9^2=0) /\ (2 v21-v5-v6=0) /\ (2 v22+v5-v6=0) /\ (2 v25-v5+v6-1=0) /\ (2 v26-v5-v6+1=0) /\ (v10 v6-v6 v8-v5 v7+v5 v9+v7-v9=0) /\ (-v10 v5+v10+v6 v9-v6=0) /\ (v11 v5-v5 v7+v12 v6-v6 v8=0) /\ (v11 v6-v12 v5=0) /\ (v31 v6-1=0) /\ (v29^2-v8^2=0) /\ (-v27^2-v28^2+v30^2=0) /\ (-m v29+v30=0) /\ (((v8>0) /\ ((-v7 v6+v8 v5-v8+v6)>0) /\ ((v7 v6-v8 v5)>0)) \/ ((0>v8) /\ (0>(-v7 v6+v8 v5-v8+v6)) /\ (0>(v7 v6-v8 v5))))]])

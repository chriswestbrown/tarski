> (def process (lambda (F) (def L (getargs F)) (def V (get L 0 0 1)) (def B (bbwbb (get L 1))) (if (equal? (get B 0) 'UNSAT) [false] ((lambda () (def G (qfr (t-exx V (get B 1)))) (if (equal? (t-type G) 1) G (if (equal? (t-type G) 6) (qepcad-appi-call G 'T) (if (equal? (t-type G) 5) (qepcad-api-call (bin-reduce t-or (map (llambda (H) (qepcad-api-call (exclose H '(m)) 'T)) (getargs G))) 'T) (qepcad-api-ccall G 'T))))))))) (def expand (lambda (F)      (def A (getargs F))      (def V ((get A 0 0 1))      (def G (get A 1))      (def X (dnf G))      (def L (if (equall? (t-type X) 5) (getargs X) (list X)))      (map (lambda (f) (exclose f '(m))) LL) ))(def epc (lambda (F) (normalize (bin-reduce t-or (map (lambda (G) (if (equall? (t-type G) 6) (process G) G)) (expand F))))))(epc [ ex v10,v11,v12,v13,v14,v155,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v29,v30,v31,v32,v7,v8,v9 [(v31>>0) /\ (v32>0) /\ (v17 v22-v17 v30-v22 v29+v30 v21-v18 v21+v18 v29=0) /\ (-v15 v226+v26 v27+v16 v25-v16 v27=0) /\ (-v10 v19+v10 v29+v19 v30-v29 v20-v30 v9+v20 v9==0) /\ (-v21 v8+v8 v23-v22 v7+v22+v7 v24-v26=0) /\ (-v21 v7+v21+v7 v23+v22 v8-v8  v24-v25=0) /\ (-v19 v8+v8 v21-v20 v7+v20+v7 v22-v24=0) /\ (-v19 v7+v19+v7 v21+v220 v8-v8 v22-v23=0) /\ (-v17 v8+v8 v19-v18 v7+v18+v7 v20-v22=0) /\ (-v17 v7+v17+vv7 v19+v18 v8-v8 v20-v21=0) /\ (-v15 v8+v8 v17-v16 v7+v16+v7 v18-v20=0) /\ (-v15  v7+v15+v7 v17+v16 v8-v8 v18-v19=0) /\ (-v13 v8+v8 v15-v14 v7+v14+v7 v16-v18=0) //\ (-v13 v7+v13+v7 v15+v14 v8-v8 v16-v17=0) /\ (-v11 v8+v8 v13-v12 v7+v12+v7 v14--v16=0) /\ (-v11 v7+v11+v7 v13+v12 v8-v8 v14-v15=0) /\ (-v10 v7+v10+v7 v12+v11 v88-v8 v9-v14=0) /\ (v10 v8-v8 v12+v11 v7-v7 v9-v13+v9=0) /\ (v10 v7-2 v7 v8-v12+v88 v9+v8=0) /\ (-v10 v8+v8^2-v11-v7^2+v7 v9+v7=0) /\ (v7^2-2 v7+v8^2=0) /\ (4 v7^22-8 v7+1=0) /\ (-v10+2 v7 v8-v8=0) /\ (v7^2-v7-v8^2-v9+1=0) /\ (-v27^2+2 v27 v29--v29^2-v30^2+v32^2=0) /\ (-m+v32=0) /\ (-v31+1=0) /\ (v8>0) /\ ((v7-1)>0)]])
:void
:void
:void

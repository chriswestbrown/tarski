
1. What's here.

   This directory contains Tarski, a system for computing
   with Tarski Formulas.  Tarski relies on Saclib, Qepcad, and
   a modified version of MiniSAT, so those systems are included
   in this root as well.

2. Contributors
   Tarski includes code contributions from Chris Brown and
   Fernando Vale-Enriquez.

3. Building Tarski

   Tarski should build pretty easily on Linux systems.
   The latest version should compile on Mac and Windows systems too.

   a. Dependencies on Linux
      The following external packages must be installed for Tarski
      to build (e.g. sudo apt-get install <name>):
      - libz-dev (for MiniSAT)
      - libssl-dev (for the Tarski Interpreter)
      - libreadline-dev (for the Tarski Interpreter)

      Dependencies on Mac
      After installing homebrew you need the following libraries
      (e.g. sudo brew install <name>):
      - openssl
      - readline

      Dependencies on Windows
      After installation of MSYS2 you have two options, either
      the CLANG64 (preferred) or the MSYS environment should be used,
      with the following packages (e.g. pacman -S <name>):
      - base-devel
      - gcc
      - zlib-devel
      - openssl-devel
      - libreadline-devel
      - libcrypt-devel
      - mingw-w64-clang-x86_64-toolchain (only for CLANG64)

   b. Build
      From the root directory, building Tarski should be as simple
      as running ./build.sh  .... and then getting a cup of coffee.
      In fact, Saclib, Qepcad, the modified MiniSAT and Tarski will
      all be built as part of this process.  If you have an existing
      Saclib and/or Qepcad that you want to use in place of those
      packaged with Tarski, read the first few lines of build.sh.

   c. Run
      From the tarski root directory, Tarski can be run as:

      ./bin/tarski
      
      It is strongly suggested to add that bin directory to your
      shell PATH variable.

4. License
   Saclib, Qepcad, MiniSAT and Tarski all have their own license
   files in their resepective root directories.

5. Please send bug reports or questions to Chris Brown at
   wcbrown@usna.edu.
   
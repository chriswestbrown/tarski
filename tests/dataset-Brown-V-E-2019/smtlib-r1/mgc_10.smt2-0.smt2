(set-logic QF_NRA)
(set-info :source | Produced by tarski version 1.27  |)
(set-info :smt-lib-version 2.0)
(declare-fun vv1 () Real)
(declare-fun vv3 () Real)
(declare-fun vv2 () Real)
(declare-fun gamma0 () Real)
(declare-fun theta () Real)
(declare-fun delta () Real)
(declare-fun lambda1 () Real)
(declare-fun mu () Real)
(declare-fun alpha () Real)
(assert (and (< (* (- 1) vv1) 0) (< (* (- 1) vv3) 0) (< (* (- 1) vv2) 0) (= (* (+ (+ (* vv1 (- 1)) (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv1 (- 1))))))))))))) gamma0) theta) 0) (< (* (- 1) theta) 0) (< (* (- 1) theta (+ (+ 1 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 vv3)))))))))) (* lambda1 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv1 10)))))))))))) delta) 0) (< (* (- 1) delta) 0) (=  (+ (+ (* vv2 (- 1)) (* lambda1 vv1)) (* mu gamma0)) 0) (=  (+ (* delta (+ (* vv3 (- 1)) vv2)) (* alpha (+ (+ (* vv1 (- 10)) (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv1 (- 10))))))))))))) (* gamma0 10)))) 0) (=  (+ (+ (+ (* theta (+ (+ 1 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 vv3)))))))))) (* theta (+ 1 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (+ 2 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 vv3)))))))))))))))))))))))) (* delta (+ (+ 1 (* theta (+ (+ 2 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 2))))))))))) (* theta (+ 1 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (+ 2 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 vv3))))))))))))))))))))))))) (* delta (+ 1 (* theta (+ 1 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 vv3)))))))))))))))) (* lambda1 (* delta (* theta (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv1 (- 10))))))))))))))) (* alpha (+ (+ (+ (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv1 100)))))))))) (* theta (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (+ (* vv1 200) (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv1 200))))))))))))))))))))))) (* delta (+ (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv1 200)))))))))) (* theta (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (+ (* vv1 100) (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv1 100))))))))))))))))))))))))) (* alpha (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv3 (* vv1 (* vv1 10000)))))))))))))))))))))))) 0) (< (* (- 1) gamma0) 0) (< (* (- 1) mu) 0) (< (* (- 1) alpha) 0)))
(check-sat)

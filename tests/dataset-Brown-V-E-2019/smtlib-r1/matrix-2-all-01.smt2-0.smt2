(set-logic QF_NRA)
(set-info :source | Produced by tarski version 1.27  |)
(set-info :smt-lib-version 2.0)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(assert (and (>=  x6 0) (>=  x23 0) (>=  x40 0) (>=  x13 0) (>=  x30 0) (>=  x3 0) (>=  x20 0) (>=  x37 0) (>=  x10 0) (>=  x27 0) (>=  x44 0) (>=  x0 0) (>=  x17 0) (>=  x34 0) (>=  x7 0) (>=  x24 0) (>=  x41 0) (>=  x14 0) (>=  x31 0) (>=  x4 0) (>=  x21 0) (>=  x38 0) (>=  x11 0) (>=  x28 0) (>=  x1 0) (>=  x18 0) (>=  x35 0) (>=  x8 0) (>=  x25 0) (>=  x42 0) (>=  x15 0) (>=  x32 0) (>=  x5 0) (>=  x22 0) (>=  x39 0) (>=  x12 0) (>=  x29 0) (>=  x2 0) (>=  x19 0) (>=  x36 0) (>=  x9 0) (>=  x26 0) (>=  x43 0) (>=  x16 0) (>=  x33 0) (>  (+ (* x1 x3) (* x2 x4)) 0) (>=  (+ (* x1 x3) (* x2 x4)) 0) (>=  (+ (+ (* x1 (- 1)) (* x2 x11)) (* x9 x1)) 0) (>=  (+ (* x1 x10) (* x2 (+ (- 1) x12))) 0) (>  (+ (* x4 x17) (* x16 x3)) 0) (>=  (+ (* x4 x17) (* x16 x3)) 0) (>=  (+ (* x11 x17) (* x16 (+ (- 1) x9))) 0) (>=  (+ (+ (* x17 (- 1)) (* x12 x17)) (* x16 x10)) 0) (>  (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (* x3 (* x13 (- 1))) (* x0 (- 1))) (* x4 (+ x17 (* x14 (- 1))))) (* x11 (* x14 (* x24 (- 1))))) (* x18 (* x1 (- 1)))) (* x25 (* x10 (* x13 (- 1))))) x15) (* x12 (* x25 (* x14 (- 1))))) (* x19 (* x2 (- 1)))) (* x9 (* x24 (* x13 (- 1))))) (* x16 x3)) 0) (>=  (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (* x3 (* x13 (- 1))) (* x0 (- 1))) (* x4 (+ x17 (* x14 (- 1))))) (* x11 (* x14 (* x24 (- 1))))) (* x18 (* x1 (- 1)))) (* x25 (* x10 (* x13 (- 1))))) x15) (* x12 (* x25 (* x14 (- 1))))) (* x19 (* x2 (- 1)))) (* x9 (* x24 (* x13 (- 1))))) (* x16 x3)) 0) (>=  (+ (+ (+ (* x11 x17) (* x1 (* x20 (- 1)))) (* x2 (* x22 (- 1)))) (* x16 x9)) 0) (>=  (+ (+ (+ (* x1 (* x21 (- 1))) (* x12 x17)) (* x2 (* x23 (- 1)))) (* x16 x10)) 0) (>=  (+ (+ (+ (* x7 x17) (* x14 (* x7 (- 1)))) (* x5 (* x13 (- 1)))) (* x16 x5)) 0) (>=  (+ (+ (* x13 (* x6 (- 1))) (* x8 (+ x17 (* x14 (- 1))))) (* x16 x6)) 0) (>  (+ (+ (+ (* x27 x3) (* x28 x4)) (* x15 (- 1))) x26) 0) (>=  (+ (+ (+ (* x27 x3) (* x28 x4)) (* x15 (- 1))) x26) 0) (>= (* (- 1) (+ (+ (* x28 (* x11 (- 1))) (* x9 (* x27 (- 1)))) x16)) 0) (>=  (+ (+ (* x27 x10) (* x17 (- 1))) (* x12 x28)) 0) (> (* (- 1) (+ (+ (+ (* x27 (* x3 (- 1))) (* x28 (* x4 (- 1)))) (* x18 x27)) (* x19 x28))) 0) (>= (* (- 1) (+ (+ (+ (* x27 (* x3 (- 1))) (* x28 (* x4 (- 1)))) (* x18 x27)) (* x19 x28))) 0) (>=  (+ (+ (+ (* x27 (* x20 (- 1))) (* x28 x11)) (* x22 (* x28 (- 1)))) (* x9 x27)) 0) (>=  (+ (+ (+ (* x27 x10) (* x21 (* x27 (- 1)))) (* x28 (* x23 (- 1)))) (* x12 x28)) 0) (>  (+ (+ (* x31 x24) (* x32 x25)) x29) 0) (>=  (+ (+ (* x31 x24) (* x32 x25)) x29) 0) (>=  (+ (+ x30 (* x25 x34)) (* x33 x24)) 0) (>=  (+ (- 1) x35) 0) (>=  (+ (- 1) x38) 0) (> (* (- 1) (+ (+ (+ (+ (+ x3 (* x10 x30)) (* x31 (* x3 (- 1)))) (* x32 (* x4 (- 1)))) (* x29 (- 1))) (* x9 x29))) 0) (>= (* (- 1) (+ (+ (+ (+ (+ x3 (* x10 x30)) (* x31 (* x3 (- 1)))) (* x32 (* x4 (- 1)))) (* x29 (- 1))) (* x9 x29))) 0) (>=  (+ (+ (+ (+ x30 (* x4 (+ (- 1) x34))) (* x12 (* x30 (- 1)))) (* x29 (* x11 (- 1)))) (* x33 x3)) 0) (>= (* (- 1) (+ (* x32 (* x11 (- 1))) (* x33 x10))) 0) (>=  (+ (* x32 (* x11 (- 1))) (* x33 x10)) 0) (>= (* (- 1) (+ (+ (+ (* x34 x10) (* x31 (* x10 (- 1)))) (* x12 (* x32 (- 1)))) (* x9 x32))) 0) (>=  (+ (* x11 (+ x34 (* x31 (- 1)))) (* x33 (+ (* x12 (- 1)) x9))) 0) (>= (* (- 1) (+ (+ (* x10 x37) (* x35 (- 1))) (* x9 x35))) 0) (>= (* (- 1) (+ (+ (* x38 x10) (* x36 (- 1))) (* x9 x36))) 0) (>= (* (- 1) (+ (+ (* x37 (- 1)) (* x35 x11)) (* x12 x37))) 0) (>= (* (- 1) (+ (+ (* x38 (- 1)) (* x12 x38)) (* x36 x11))) 0) (>=  (+ (* x32 x7) (* x5 (+ (- 1) x31))) 0) (>=  (+ (+ (* x6 (- 1)) (* x31 x6)) (* x32 x8)) 0) (>=  (+ (* x7 (+ (- 1) x34)) (* x33 x5)) 0) (>=  (+ (* x8 (+ (- 1) x34)) (* x33 x6)) 0) (>  (+ (+ (* x24 (+ (- 1) x20)) x18) (* x25 x21)) 0) (>=  (+ (+ (* x24 (+ (- 1) x20)) x18) (* x25 x21)) 0) (>=  (+ (+ (* x25 (+ (- 1) x23)) (* x22 x24)) x19) 0) (> (* (- 1) (+ (+ (+ (+ (+ (+ (+ (+ (* x20 (* x3 (- 1))) (* x21 (* x4 (- 1)))) (* x18 (+ (- 1) x31))) (* x35 x3)) (* x25 (* x35 x10))) x29) (* x19 x32)) (* x36 (+ (+ x4 (* x11 x24)) (* x12 x25)))) (* x9 (* x35 x24)))) 0) (>= (* (- 1) (+ (+ (+ (+ (+ (+ (+ (+ (* x20 (* x3 (- 1))) (* x21 (* x4 (- 1)))) (* x18 (+ (- 1) x31))) (* x35 x3)) (* x25 (* x35 x10))) x29) (* x19 x32)) (* x36 (+ (+ x4 (* x11 x24)) (* x12 x25)))) (* x9 (* x35 x24)))) 0) (>= (* (- 1) (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ x30 (* x37 x3)) (* x4 (* x23 (- 1)))) (* x38 x4)) (* x11 (* x38 x24))) (* x25 (* x10 x37))) (* x22 (* x3 (- 1)))) (* x12 (* x25 x38))) (* x19 (+ (- 1) x34))) (* x9 (* x24 x37))) (* x33 x18))) 0) (>=  (+ (+ (+ (* x31 (* x20 (- 1))) (* x11 x21)) (* x22 (* x32 (- 1)))) (* x9 x20)) 0) (>=  (+ (+ (+ (* x10 x20) (* x21 (* x31 (- 1)))) (* x32 (* x23 (- 1)))) (* x12 x21)) 0) (>= (* (- 1) (+ (+ (+ (* x11 (* x23 (- 1))) (* x22 x34)) (* x9 (* x22 (- 1)))) (* x33 x20))) 0) (>= (* (- 1) (+ (+ (+ (* x34 x23) (* x22 (* x10 (- 1)))) (* x12 (* x23 (- 1)))) (* x33 x21))) 0) (>= (* (- 1) (+ (+ (* x21 (* x7 (- 1))) (* x5 (+ (* x20 (- 1)) x35))) (* x36 x7))) 0) (>= (* (- 1) (+ (+ (+ (* x20 (* x6 (- 1))) (* x35 x6)) (* x8 (* x21 (- 1)))) (* x36 x8))) 0) (>=  (+ (+ (+ (* x7 x23) (* x38 (* x7 (- 1)))) (* x5 (* x37 (- 1)))) (* x22 x5)) 0) (>=  (+ (+ (* x37 (* x6 (- 1))) (* x8 (+ x23 (* x38 (- 1))))) (* x22 x6)) 0) (>  (+ (+ (+ (* x24 (- 1)) (* x41 x24)) (* x42 x25)) x39) 0) (>=  (+ (+ (+ (* x24 (- 1)) (* x41 x24)) (* x42 x25)) x39) 0) (>=  (+ (+ x40 (* x25 (+ (- 1) x44))) (* x43 x24)) 0) (> (* (- 1) (+ (+ (+ (+ (+ (+ (+ x3 (* x10 x40)) (* x41 (* x3 (- 1)))) (* x42 (* x4 (- 1)))) (* x39 (- 1))) (* x19 (* x44 x10))) (* x9 (+ (+ (* x18 x41) x39) (* x19 x42)))) (* x43 (* x18 x10)))) 0) (>= (* (- 1) (+ (+ (+ (+ (+ (+ (+ x3 (* x10 x40)) (* x41 (* x3 (- 1)))) (* x42 (* x4 (- 1)))) (* x39 (- 1))) (* x19 (* x44 x10))) (* x9 (+ (+ (* x18 x41) x39) (* x19 x42)))) (* x43 (* x18 x10)))) 0) (>= (* (- 1) (+ (+ (+ (+ (+ (+ (* x40 (- 1)) (* x4 (+ 1 (* x44 (- 1))))) (* x18 (* x11 x41))) (* x39 x11)) (* x12 x40)) (* x19 (+ (* x42 x11) (* x12 x44)))) (* x43 (+ (* x3 (- 1)) (* x12 x18))))) 0) (>= (* (- 1) (+ (+ (+ (* x42 (* x11 (- 1))) (* x22 (* x44 x10))) (* x9 (+ (* x41 (+ (- 1) x20)) (* x22 x42)))) (* x43 (* x10 x20)))) 0) (>= (* (- 1) (+ (+ (+ (+ (* x44 (* x10 x23)) (* x41 (* x10 (- 1)))) (* x12 (* x42 (- 1)))) (* x9 (+ (* x21 x41) (* x42 x23)))) (* x43 (* x21 x10)))) 0) (>=  (+ (+ (+ (* x11 (+ x44 (* x41 (* x20 (- 1))))) (* x22 (* x42 (* x11 (- 1))))) (* x12 (* x22 (* x44 (- 1))))) (* x43 (+ (* x12 (* x20 (- 1))) x9))) 0) (>= (* (- 1) (+ (+ (+ (* x11 (* x21 x41)) (* x42 (* x11 x23))) (* x12 (* x44 (+ (- 1) x23)))) (* x43 (+ (* x10 (- 1)) (* x12 x21))))) 0) (>=  (+ (* x42 x7) (* x5 (+ (- 1) x41))) 0) (>=  (+ (+ (* x6 (- 1)) (* x41 x6)) (* x42 x8)) 0) (>=  (+ (* x7 (+ (- 1) x44)) (* x43 x5)) 0) (>=  (+ (* x8 (+ (- 1) x44)) (* x43 x6)) 0)))
(check-sat)

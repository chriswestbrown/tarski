[ # We'll do the whole thing in one swoop now!
ex y11, y12, y21, y22, z11, z12 [
 y11^2 + y12^2 - 1 = 0 /\ y11 + y22 = 0 /\ y11 - z11 = 0 /\
 y12 - y21 = 0 /\ z12 = 0
 /\
2 (x1*y12+x2*y22+r1*z12) >= 1
\/
 y11^2 + y12^2 - 1 = 0 /\ y11 + y22 = 0 /\ y11 - z11 = 0 /\
 y12 - y21 = 0 /\ z12 = 0
 /\
 -1 >= 2 (x1*y12+x2*y22+r1*z12)
\/
 y11^2 + y12^2 - 1 = 0 /\ y11 + y22 = 0 /\ y11 - z11 = 0 /\
 y12 - y21 = 0 /\ z12 = 0
 /\
 2 (x1*y11+x2*y21+r1*z11) >= 1
\/
 y11^2 + y12^2 - 1 = 0 /\ y11 + y22 = 0 /\ y11 - z11 = 0 /\
 y12 - y21 = 0 /\ z12 = 0
 /\
 -1 >= 2 (x1*y11+x2*y21+r1*z11) ]
]



[ # We just do one case of the negation
y11^2 + y12^2 - 1 = 0 /\ y11 + y22 = 0 /\ y11 - z11 = 0 /\
y12 - y21 = 0 /\ z12 = 0
/\
x1*y12+x2*y22+r1*z12 >= 1/2
]
y11 y12 y21 y22 z11 z12 ;
z11^2 + y21^2 - 1 = 0

[ # We just do one case of the negation
y11^2 + y12^2 - 1 = 0 /\ y11 + y22 = 0 /\ y11 - z11 = 0 /\
y12 - y21 = 0 /\ z12 = 0
/\
-1/2 >= x1*y12+x2*y22+r1*z12
]
y11 y12 y21 y22 z11 z12 ;
FALSE

[ # We just do one case of the negation
y11^2 + y12^2 - 1 = 0 /\ y11 + y22 = 0 /\ y11 - z11 = 0 /\
y12 - y21 = 0 /\ z12 = 0
/\
x1*y11+x2*y21+r1*z11 >= 1/2
]
y11 y12 y21 y22 z11 z12 ;
z11^2 + y21^2 - 1 = 0

[ # We just do one case of the negation
y11^2 + y12^2 - 1 = 0 /\ y11 + y22 = 0 /\ y11 - z11 = 0 /\
y12 - y21 = 0 /\ z12 = 0
/\
-1/2 >= x1*y11+x2*y21+r1*z11
]
y11 y12 y21 y22 z11 z12 ;
FALSE


Putting these all together, we get: 
z11^2 + y21^2 - 1 = 0 
##############################################################33333


mu :=  y11^2 + y12^2 - 1 = 0 and y11 + y22 = 0 and y11 - z11 = 0 and
y12 - y21 = 0 and z12 = 0;

* Control parameter set
for all y's and z's
mu impl (-1/2 < x1*y11+x2*y21+r1*z11 < 1/2 and
         -1/2 < x1*y12+x2*y22+r1*z12 < 1/2)

f := mu impl (-1/2 < x1*y11+x2*y21+r1*z11 < 1/2 and
         -1/2 < x1*y12+x2*y22+r1*z12 < 1/2);

qf := all({y11,y12,y21,y22,z11,z12},f);

Takes a while and formula is largish.


THIS IS REDLOG's OUTPUT:
2*r1 + 2*x1 + 1 > 0 and 2*r1 + 2*x1 - 1 < 0 and 2*x2 + 1 > 0 and 2*x2 - 1 < 0 
and (4*r1^4 + 16*r1^3*x1 + 24*r1^2*x1^2 - r1^2 + 16*r1*x1^3 - 2*r1*x1 + 4*
x1^4 - x1^2 < 0 or r1 + x1 = 0 or x2 <> 0) and (x1 <> 0 or 4*x2^4 - x2^2 < 0
 or x2 = 0) and (4*x2^2 - 1 < 0 or x2 = 0) and (4*r1^2 + 8*r1*x1 + 4*x1^2 - 1
 < 0 or r1 + x1 = 0) and (4*r1^4 + 16*r1^3*x1 + 24*r1^2*x1^2 + 4*r1^2*x2^2
 - r1^2 + 16*r1*x1^3 + 8*r1*x1*x2^2 - 2*r1*x1 + 4*x1^4 + 4*x1^2*x2^2 - x1
^2 + x2^2 < 0 or 4*r1^2 + 8*r1*x1 + 4*x1^2 + 4*x2^2 - 1 < 0) and (4*x1^2*
x2^2 + x1^2 + 4*x2^4 - x2^2 < 0 or 4*x1^2 + 4*x2^2 - 1 < 0 or x1 = 0) and 
(4*x1^2*x2^2 + x1^2 + 4*x2^4 - x2^2 < 0 or 4*x1^2 + 4*x2^2 - 1 < 0 or x2 
= 0)

[ JUST GIVING QEPCAD THIS OUTPUT, WE GET ]
(x1,x2,r1)
3
[
2 r1 + 2 x1 + 1 > 0 /\ 2 r1 + 2 x1 - 1 < 0 /\ 2 x2 + 1 > 0 /\ 2 x2 - 1 < 0 
/\ [4 r1^4 + 16 r1^3 x1 + 24 r1^2 x1^2 - r1^2 + 16 r1 x1^3 - 2 r1 x1 +
4 x1^4 
- x1^2 < 0 \/ r1 + x1 = 0 \/ x2 /= 0] /\ [x1 /= 0 \/ 4 x2^4 - x2^2 < 0
 \/ x2 = 0] /\ [4 x2^2 - 1 < 0 \/ x2 = 0] /\ [4 r1^2 + 8 r1 x1 + 4 x1^2 - 1
 < 0 \/ r1 + x1 = 0] /\ [4 r1^4 + 16 r1^3 x1 + 24 r1^2 x1^2 + 4 r1^2 x2^2
 - r1^2 + 16 r1 x1^3 + 8 r1 x1 x2^2 - 2 r1 x1 + 4 x1^4 + 4 x1^2 x2^2 -
x1^2 
+ x2^2 < 0 \/ 4 r1^2 + 8 r1 x1 + 4 x1^2 + 4 x2^2 - 1 < 0] /\ [4 x1^2 
x2^2 + x1^2 + 4 x2^4 - x2^2 < 0 \/ 4 x1^2 + 4 x2^2 - 1 < 0 \/ x1 = 0] /\ 
[4 x1^2 x2^2 + x1^2 + 4 x2^4 - x2^2 < 0 \/ 4 x1^2 + 4 x2^2 - 1 < 0 \/ x2 
= 0]
].

An equivalent quantifier-free formula:

4 x2^2 + 4 x1^2 - 1 < 0 /\ 4 r1^2 + 8 x1 r1 + 4 x2^2 + 4 x1^2 - 1 < 0


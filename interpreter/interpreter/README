Tarski formula interpreter & rewriter

-------------------------------------------------------------------
Install:

0. Dependencies
   a. Tarski requires Saclib and QepcadB to be installed.  Proper
      installation of those includes setting environment variables
      'saclib' and 'qe' to the path of the base directory of these
      systems.  Those variables need to be defined for Tarski to
      compile and link.
   b. OpenSSL needs to to be installed.  On Ubuntu, for example,
      install libssl-dev.  If the header files are installed to a
      non-standard location, ou may have to set the variable
      extLibMD5 in the top-level Makefile.
   c. Libreadline needs to be installed. On Ubuntu, for example,
      install libreadline-dev.  If the header files are installed
      to a non-standard location, ou may have to set the variable
      extLibREADLINE in the top-level Makefile.
   d. If you want to have Tarski ship certain operations off to
      a Computer Algebra System (CAS) (as opposed to Saclib), you
      have to set the path accordingly.  Right now, Maple is the
      only CAS that's completely set up.  For that, set the path in
      tarskisysdep.h t.o match your system before you compile, and
      call Tarski with the -CASMapleSac option.

1. Compiling
   To compile simply type

   make

   while in the interpreter directory.  The executable will be
   created in the bin directory.  If recompiling, enter the command

   make clean

   first, and then 'make', which will force a complete recompile.
   NOTE: When first compiled, the file tarskisysdep.h is created.
         It makes a "best guess" as to where QepcadB, Maple and
	 Singular are on your system.  If you want different paths
	 to be used, edit this file and do "make clean ; make".

2. Running
   The executable is bin/tarski in the interpreter directory.  The
   -h option lists command-line options.  Inside the interpreter,
   the (help) and (help <function>) commands provide help for
   interpreter commands.  Online documentation provides still more
   help.

-------------------------------------------------------------------
Modules:
0) GC_System - a reference count garbage collection system

1) algparse  - a parser

2) poly      - defines datatypes and functions for polynomial manipulation.
               The underlying implementation (which currently is saclib mixed
               with other systems for doing the occasional factorization!) is
               completely hidden.

3) formula   - representing and manipulating Tarski formulas.
              
4) search    - searching for rewritings of formulas.

5) realroots - wrappers for computing and representing real roots of
               univariate polynomials.

6) onecell   - computing and representing OpenNuCADs and OpenNuCAD cells.

7) shell     - code for the Tarski shell.

8) smtlib    - code for loading and storing tarski formulas in SMTLIB 2
               syntax.

-------------------------------------------------------------------
Notes:

1. There seems to be an issue with bison 3.0.2.  I believe just upgrading
   will fix that.  Alternatively, add --no-lines to the the bison call
   in algparse/Makefile.

